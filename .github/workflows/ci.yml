name: CI
on:
  push:
    branches: [ master ]
    tags: [ 'v[0-9]+\.[0-9]+.*' ]
  pull_request: { branches: [master] }
  schedule: [ cron: '20 16 * * 6' ]

env:
  DO_PUBLISH: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') }}
  DO_PUBLISH_DOCS: |
    ${{ github.event_name == 'push' && (github.ref == 'refs/heads/master' ||
                                        startsWith(github.ref, 'refs/tags/')) }}

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9]
    steps:
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/cache@v2
        name: Set up caches
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-py${{ matrix.python-version }}
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 3
      - name: Install dependencies
        run: pip install flake8
      - name: flake8
        run: flake8

  test:
    name: Test
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        # When bumping, note to revise TEST_WITH_COVERAGE below
        python-version: [ 3.7, 3.8, 3.9, "pypy-3.7" ]
        scikit-version: [ "0.*", "1.*" ]

    env:
      TEST_WITH_COVERAGE: ${{ matrix.python-version == '3.9' && matrix.scikit-version == '1.*' }}

    steps:
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up caches
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/pip
            ~/.cache/
            ~/.ccache/
          key: ${{ runner.os }}-py${{ matrix.python-version }}-${{ matrix.scikit-version }}

      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Set up ccache
        run: |
          sudo apt-get install -yq ccache
          echo /usr/lib/ccache >> $GITHUB_PATH

      - name: Install dependencies
        run: |
          pip install -U pip setuptools wheel twine
          pip install numpy cython  # scikit-learn build deps if wheel missing
          pip install scikit-learn==${{ matrix.scikit-version }}
          pip install .[dev,plots]

      - name: Python sdist
        run: |
          python setup.py sdist
          twine check dist/*

      - name: Test
        if: env.TEST_WITH_COVERAGE != 'true'
        run: |
          python -c 'import skopt; skopt.show_versions()'
          make test-code-parallel

      - name: Test with Coverage
        if: env.TEST_WITH_COVERAGE == 'true'
        run: |
          python -c 'import skopt; skopt.show_versions()'
          make test-coverage
          bash <(curl -s https://codecov.io/bash)

      - name: Publish ðŸ“¦ on PyPI
        if: env.DO_PUBLISH == 'true'
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}

  docs:
    name: Docs
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        python-version: [ 3.9 ]
    env:
      MPLBACKEND: "agg"

    steps:
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up caches
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-py${{ matrix.python-version }}

      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Install latex dependencies
        run: |
          sudo apt-get -yq update
          sudo apt-get -yq --no-install-recommends install \
              dvipng texlive-latex-base texlive-latex-extra \
              texlive-latex-recommended texlive-fonts-recommended \
              latexmk tex-gyre gsfonts ccache

      - name: Install dependencies
        run: |
          pip install -U pip setuptools wheel
          pip install -e .[dev,doc,plots]

      - name: Test docs
        run: |
          python -c 'import skopt; skopt.show_versions()'
          make test-doc
          make test-sphinxext
          make -C doc doctest
          make -C doc linkcheck

      - name: Build docs
        run: |
          .github/scripts/build_docs.sh

      - name: Publish docs
        if: env.DO_PUBLISH_DOCS == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_DOCS_TOKEN }}
        run: |
          .github/scripts/publish_docs.sh doc/_build/html/stable
